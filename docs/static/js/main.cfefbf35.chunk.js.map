{"version":3,"sources":["components/Search/Search.tsx","components/MainPage/ProductCard/ProductCard.tsx","components/MainPage/MainPage.tsx","components/Admin/StatusCheckbox/StatusCheckbox.tsx","components/ImageInput/ImageInput.tsx","config.ts","middleware.ts","components/Admin/Product/AdminProduct.tsx","components/Admin/AddForm/AddForm.tsx","components/Admin/Auth/Auth.tsx","components/Admin/Admin.tsx","components/Cart/Product/CartProduct.tsx","components/Cart/Cart.tsx","components/Header/Header.tsx","components/Loader/Loader.tsx","components/Error/Error.tsx","App.tsx","reportWebVitals.ts","i18n.ts","index.tsx"],"names":["Search","inputEmitter","t","useTranslation","className","icon","faSearch","onChange","event","target","value","ProductCard","item_name","price","id","picture","is_available","addToCart","src","alt","onClick","faCartPlus","MainPage","cart","setCart","cartCount","setCartCount","products","useState","search","setSearch","sort","setSort","stringId","toString","document","cookie","JSON","stringify","productsItems","filter","item","toLowerCase","includes","a","b","recency","name","map","i","croppedValue","trim","e","field","nativeEvent","columnClassName","breakpointCols","default","1500","700","500","StatusCheckbox","available","setAvailable","ImageInput","initialSrc","setImage","imageElement","useRef","ref","type","onInput","reader","FileReader","readAsDataURL","files","onloadend","strImage","result","length","alert","current","config","key","token","request","login","username","password","body","add","product","update","deleteItem","method","path","defaultReturn","fetch","headers","Authorization","response","ok","Promise","resolve","json","AdminProduct","setProducts","idx","setError","updateCart","editMode","setEditMode","image","loading","setLoading","nameInput","priceInput","parseInt","updatedProduct","placeholder","defaultValue","faEdit","faTimesCircle","AddForm","setAddOpened","newProduct","Auth","setToken","loginInput","passwordInput","history","useHistory","autoFocus","push","Admin","addOpened","CartProduct","amount","changeCart","faMinusSquare","faPlusSquare","Cart","cartList","setCartList","cartProducts","Object","keys","faShoppingCart","reduce","prev","curr","currProduct","find","Header","authToken","i18n","languages","lang","changeLanguage","language","Loader","viewBox","cx","cy","r","strokeWidth","fill","strokeDasharray","Error","message","show","App","tokenExpr","match","slice","getToken","loaded","setLoaded","error","data","count","cartData","parsedData","parse","entries","values","getCart","useEffect","loadProducts","then","exact","render","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","resources","en","translation","ru","use","initReactI18next","init","lng","cookieLang","navLang","navigator","split","getCurrentLanguage","keySeparator","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.cfefbf35.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./Search.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { faSearch } from \"@fortawesome/free-solid-svg-icons\";\r\n\r\ninterface SearchProps {\r\n  inputEmitter: (value: string) => void;\r\n}\r\n\r\nexport function Search({ inputEmitter }: SearchProps) {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"search\">\r\n      <span className=\"search__title\">\r\n        <FontAwesomeIcon icon={faSearch} />\r\n        &nbsp;&nbsp;{t(\"search\")}\r\n      </span>\r\n\r\n      <input className=\"search__field\" onChange={event => inputEmitter(event.target.value)}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./ProductCard.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { faCartPlus } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { ProductWithId } from \"../../../data/shared\";\r\n\r\ninterface ProductCardProps extends ProductWithId {\r\n  addToCart: (id: number) => void;\r\n}\r\n\r\nexport function ProductCard({\r\n  item_name,\r\n  price,\r\n  id,\r\n  picture,\r\n  is_available,\r\n  addToCart,\r\n}: ProductCardProps) {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <div className=\"card__content\">\r\n        <img src={picture} className=\"card__image\" alt=\"\" />\r\n        <div className=\"card__name\">{item_name}</div>\r\n        <div className=\"card__price\">{price} ₽</div>\r\n\r\n        {!is_available && <div className=\"card__availability\">{t(\"product.not_available\")}</div>}\r\n      </div>\r\n\r\n      {is_available && (\r\n        <div className=\"card__add\">\r\n          <FontAwesomeIcon onClick={() => addToCart(id)} className=\"card__cart\" icon={faCartPlus} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React, { ChangeEvent, useState } from \"react\";\r\nimport Masonry from \"react-masonry-css\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"./MainPage.css\";\r\nimport { Search } from \"../Search/Search\";\r\nimport { ProductCard } from \"./ProductCard/ProductCard\";\r\nimport { ProductWithId, CartType } from \"../../data/shared\";\r\n\r\ninterface MainPageProps {\r\n  cart: CartType;\r\n  setCart: React.Dispatch<React.SetStateAction<CartType>>;\r\n  cartCount: number;\r\n  setCartCount: React.Dispatch<React.SetStateAction<number>>;\r\n  products: ProductWithId[];\r\n  setProducts: (list: ProductWithId[]) => void;\r\n}\r\n\r\nexport function MainPage({\r\n  cart,\r\n  setCart,\r\n  cartCount,\r\n  setCartCount,\r\n  products,\r\n}: MainPageProps) {\r\n  const { t } = useTranslation();\r\n  const [search, setSearch] = useState(\"\");\r\n  const [sort, setSort] = useState(\"price\");\r\n\r\n  const comparators: { [key: string]: (a: ProductWithId, b: ProductWithId) => number } = {\r\n    price: (a: ProductWithId, b: ProductWithId) => a.price - b.price,\r\n    recency: (a: ProductWithId, b: ProductWithId) => b.id - a.id,\r\n    name: (a: ProductWithId, b: ProductWithId) => {\r\n      if (a.item_name > b.item_name) return 1;\r\n      if (a.item_name < b.item_name) return -1;\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  function changeSort(e: ChangeEvent) {\r\n    //@ts-ignore\r\n    const field = e.nativeEvent.target.value;\r\n    setSort(field);\r\n  }\r\n\r\n  function onSearchInput(value: string): void {\r\n    const croppedValue = value.trim().toLowerCase();\r\n    setSearch(croppedValue);\r\n  }\r\n\r\n  function addToCart(id: number): void {\r\n    const stringId = id.toString();\r\n    cart[stringId] = cart[stringId] ? cart[stringId] + 1 : 1;\r\n    document.cookie = `cart=${JSON.stringify(cart)}`;\r\n    setCart(cart);\r\n    setCartCount(++cartCount);\r\n  }\r\n\r\n  const productsItems = products\r\n    .filter((item) => item.item_name.toLowerCase().includes(search))\r\n    .sort(comparators[sort])\r\n    .map(({ item_name, price, picture, is_available, id }: ProductWithId, i) => {\r\n      return (\r\n        <ProductCard\r\n          key={i}\r\n          id={id}\r\n          item_name={item_name}\r\n          price={price}\r\n          picture={picture}\r\n          is_available={is_available}\r\n          addToCart={addToCart}\r\n        />\r\n      );\r\n    });\r\n\r\n  const breakpointColumnsObj = {\r\n    default: 4,\r\n    1500: 3,\r\n    700: 2,\r\n    500: 1,\r\n  };\r\n\r\n  return (\r\n    <div className=\"main\">\r\n      <Search inputEmitter={onSearchInput} />\r\n\r\n      <div className=\"content__sort\">\r\n        <span>{t(\"sort.by\")} &nbsp;</span>\r\n        <select onChange={changeSort} className=\"content__sort-select\">\r\n          <option value=\"price\">{t(\"sort.price\")}</option>\r\n          <option value=\"recency\">{t(\"sort.recency\")}</option>\r\n          <option value=\"name\">{t(\"sort.name\")}</option>\r\n        </select>\r\n      </div>\r\n\r\n      <Masonry\r\n        columnClassName=\"results__col\"\r\n        className=\"results\"\r\n        breakpointCols={breakpointColumnsObj}\r\n      >\r\n        {productsItems}\r\n      </Masonry>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./StatusCheckbox.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\n\r\ninterface StatusCheckboxProps {\r\n  available: boolean;\r\n  setAvailable: React.Dispatch<React.SetStateAction<boolean>>;\r\n}\r\n\r\nexport function StatusCheckbox({ available, setAvailable }: StatusCheckboxProps) {\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"status\">\r\n      <div\r\n        className={`status__option ${available && \"status__option_selected_green\"}`}\r\n        onClick={() => setAvailable(true)}\r\n      >\r\n        {t(\"product.available\")}\r\n      </div>\r\n      <div\r\n        className={`status__option ${!available && \"status__option_selected_red\"}`}\r\n        onClick={() => setAvailable(false)}\r\n      >\r\n        {t(\"product.not_available\")}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef } from \"react\";\r\nimport \"./ImageInput.css\";\r\n\r\ninterface ImageInputProps {\r\n  initialSrc?: string;\r\n  setImage: (im: string) => void;\r\n}\r\n\r\nexport function ImageInput({ initialSrc, setImage }: ImageInputProps) {\r\n  const imageElement: React.MutableRefObject<null | HTMLImageElement> = useRef(null);\r\n\r\n  function updateImage(event: any): void {\r\n    try {\r\n      const reader = new FileReader();\r\n\r\n      reader.readAsDataURL(event.nativeEvent.target.files[0]);\r\n      reader.onloadend = () => {\r\n        const strImage = reader.result as string;\r\n        if (strImage.length > 500000) {\r\n          alert(\"too big image\");\r\n          return;\r\n        }\r\n        setImage(strImage);\r\n        imageElement!.current!.src = strImage;\r\n      };\r\n    } catch {\r\n      return;\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"image-input\">\r\n      <img ref={imageElement} src={initialSrc} className=\"image-input__image\" alt=\"\" />\r\n      <input type=\"file\" className=\"image-input__input\" onInput={updateImage} />\r\n    </div>\r\n  );\r\n}\r\n","export const config = {\r\n  name: \"GP\",\r\n  token: \"0d7aa36bb0754d6871a209c75209f6475d3c6907\",\r\n  url: \"https://multitenant-backend.herokuapp.com/shop/\",\r\n  login_time: 30, // minutes\r\n  cart_time: 24, // hours\r\n  languages: [\r\n    {\r\n      key: \"en\",\r\n      name: \"English\",\r\n    },\r\n    {\r\n      key: \"ru\",\r\n      name: \"Русский\",\r\n    }\r\n  ]\r\n};\r\n","import { config } from \"./config\";\r\nimport { Product, ProductWithId } from \"./data/shared\";\r\n\r\nconst token = `Token ${config.token}`;\r\n\r\ntype Method = \"GET\" | \"POST\" | \"DELETE\";\r\n\r\ntype TokenResponse = { token: string };\r\n\r\ntype DeleteResponse = { result: boolean };\r\n\r\nexport async function loadProducts(): Promise<ProductWithId[]> {\r\n  try {\r\n    return await request<ProductWithId[]>(\"GET\", \"products\", []);\r\n  } catch (error) {\r\n    return [];\r\n  }\r\n}\r\n\r\nexport async function login(username: string, password: string): Promise<string> {\r\n  try {\r\n    const body = JSON.stringify({ username, password });\r\n    const { token } = await request<TokenResponse>(\"POST\", \"login\", { token: \"\" }, body);\r\n    return token === config.token ? token : \"\";\r\n  } catch (error) {\r\n    return \"\";\r\n  }\r\n}\r\n\r\nexport async function add(product: Product): Promise<ProductWithId | null> {\r\n  try {\r\n    const body = JSON.stringify(product);\r\n    return await request<ProductWithId | null>(\"POST\", \"products/create\", null, body);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function update(product: ProductWithId): Promise<ProductWithId | null> {\r\n  try {\r\n    const body = JSON.stringify(product);\r\n    return await request<ProductWithId | null>(\"POST\",`products/update/${product.id}`, null, body);\r\n  } catch (error) {\r\n    return null;\r\n  }\r\n}\r\n\r\nexport async function deleteItem(id: number): Promise<boolean> {\r\n  try {\r\n    const { result } = await request<DeleteResponse>(\"DELETE\", `products/delete/${id}`, { result: false });\r\n    return result;\r\n  } catch (error) {\r\n    return false;\r\n  }\r\n}\r\n\r\nasync function request<T>(method: Method, path: string, defaultReturn: T, body?: string): Promise<T> {\r\n  const response = await fetch(`${config.url}${path}/`, {\r\n    method,\r\n    headers: {\r\n      \"Content-Type\": \"application/json\",\r\n      Authorization: token,\r\n    },\r\n    body,\r\n  });\r\n\r\n  if (!response.ok) {\r\n    return Promise.resolve(defaultReturn);\r\n  }\r\n  return await response.json() as Promise<T>;\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport \"./AdminProduct.css\";\r\nimport \"./Edit.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { ProductWithId } from \"../../../data/shared\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTimesCircle, faEdit } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { StatusCheckbox } from \"../StatusCheckbox/StatusCheckbox\";\r\nimport { ImageInput } from \"../../ImageInput/ImageInput\";\r\nimport { update, deleteItem } from \"../../../middleware\";\r\nimport { Loader } from \"../..\";\r\n\r\ninterface AdminProductProps extends ProductWithId {\r\n  products: ProductWithId[];\r\n  setProducts: (prod: ProductWithId[]) => void;\r\n  idx: number;\r\n  setError: (message: string) => void;\r\n  updateCart: () => void;\r\n}\r\n\r\nexport function AdminProduct({\r\n  id,\r\n  item_name,\r\n  price,\r\n  picture,\r\n  is_available,\r\n  products,\r\n  setProducts,\r\n  idx,\r\n  setError,\r\n  updateCart\r\n}: AdminProductProps) {\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [available, setAvailable] = useState(is_available);\r\n  const [image, setImage] = useState(picture);\r\n  const [loading, setLoading] = useState(false);\r\n  const nameInput: React.MutableRefObject<null | HTMLInputElement> = useRef(null);\r\n  const priceInput: React.MutableRefObject<null | HTMLInputElement> = useRef(null);\r\n  const { t } = useTranslation();\r\n\r\n  async function updateProduct(): Promise<void> {\r\n    const item_name = nameInput!.current!.value;\r\n    const price = parseInt(priceInput!.current!.value);\r\n    const is_available = available;\r\n    const picture = image;\r\n\r\n    if (!item_name || !picture) {\r\n      setError(t(\"error.fields\"));\r\n      return;\r\n    }\r\n    if (!price) {\r\n      setError(t(\"error.price\"));\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const updatedProduct = await update({ id, item_name, price, is_available, picture });\r\n    setLoading(false);\r\n\r\n    if (!updatedProduct) {\r\n      setError(t(\"error.base\"));\r\n      return;\r\n    }\r\n    setProducts(products.map((item, i) => (i === idx ? updatedProduct : item)));\r\n    updateCart();\r\n    setEditMode(false);\r\n  }\r\n\r\n  async function deleteProduct(): Promise<void> {\r\n    setLoading(true);\r\n    const result = await deleteItem(id);\r\n    setLoading(false);\r\n\r\n    if (result) {\r\n      setProducts(products.filter(item => item.id !== id));\r\n      updateCart();\r\n    } else {\r\n      setError(t(\"error.base\"));\r\n    }\r\n  }\r\n\r\n  function getNameElement() {\r\n    return editMode ? (\r\n      <input\r\n        className=\"product__input product__name_edit\"\r\n        placeholder={t(\"product.name\")}\r\n        defaultValue={item_name}\r\n        ref={nameInput}\r\n      />\r\n    ) : (\r\n      <div className=\"product__name\">{item_name}</div>\r\n    );\r\n  }\r\n\r\n  function getPriceElement() {\r\n    return editMode ? (\r\n      <input\r\n        ref={priceInput}\r\n        className=\"product__input product__price_edit\"\r\n        defaultValue={price}\r\n        placeholder={t(\"product.price\")}\r\n      />\r\n    ) : (\r\n      <div className=\"product__price\">\r\n        {price} ₽&nbsp;&nbsp;&nbsp;\r\n        {is_available &&\r\n          <span className=\"product__status_available\">{t(\"product.available\")}</span>}\r\n        {!is_available &&\r\n          <span className=\"product__status_not-available\">{t(\"product.not_available\")}</span>}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function getImageElement() {\r\n    return editMode ? (\r\n      <ImageInput initialSrc={picture} setImage={setImage} />\r\n    ) : (\r\n      <img className=\"product__image-item\" alt=\"\" src={picture} />\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={`product ${editMode && \"product_edit\"}`}>\r\n      {loading && <Loader />}\r\n\r\n      <div className={`product__image ${editMode && \"product__image_edit\"}`}>\r\n        {getImageElement()}\r\n      </div>\r\n\r\n      <div className={`product__id ${editMode && \"product__id_edit\"}`}>{id}</div>\r\n\r\n      {getNameElement()}\r\n\r\n      {getPriceElement()}\r\n\r\n      {editMode && (\r\n        <div className=\"product__av\">\r\n          <StatusCheckbox available={available} setAvailable={setAvailable} />\r\n        </div>\r\n      )}\r\n\r\n      {editMode && (\r\n        <button className=\"product__save\" onClick={updateProduct}>\r\n          {t(\"product.save\")}\r\n        </button>\r\n      )}\r\n\r\n      <div className=\"product__control\">\r\n        <button className=\"product__control-btn\" onClick={() => setEditMode(!editMode)}>\r\n          <FontAwesomeIcon icon={faEdit} />\r\n        </button>\r\n        <button className=\"product__control-btn product__control-btn_red\" onClick={deleteProduct}>\r\n          <FontAwesomeIcon icon={faTimesCircle} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport \"./AddForm.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { StatusCheckbox } from \"../StatusCheckbox/StatusCheckbox\";\r\nimport { ImageInput } from \"../../ImageInput/ImageInput\";\r\nimport { add } from \"../../../middleware\";\r\nimport { ProductWithId } from \"../../../data/shared\";\r\nimport { Loader } from \"../..\";\r\n\r\ninterface AddFormProps {\r\n  setAddOpened: (val: boolean) => void;\r\n  products: ProductWithId[];\r\n  setProducts: (product: ProductWithId[]) => void;\r\n  setError: (message: string) => void;\r\n  updateCart: () => void;\r\n}\r\n\r\nexport function AddForm({ setAddOpened, products, setProducts, setError, updateCart }: AddFormProps) {\r\n  const [available, setAvailable] = useState(true);\r\n  const [image, setImage] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const nameInput: React.MutableRefObject<null | HTMLInputElement> = useRef(null);\r\n  const priceInput: React.MutableRefObject<null | HTMLInputElement> = useRef(null);\r\n  const { t } = useTranslation();\r\n\r\n  async function addProduct(): Promise<void> {\r\n    const item_name = nameInput!.current!.value;\r\n    const price = parseInt(priceInput!.current!.value);\r\n    const is_available = available;\r\n    const picture = image;\r\n\r\n    if (!item_name || !picture) {\r\n      setError(t(\"error.fields\"));\r\n      return;\r\n    }\r\n    if (!price) {\r\n      setError(t(\"error.price\"));\r\n      return;\r\n    }\r\n\r\n    setLoading(true);\r\n    const newProduct = await add({ item_name, price, is_available, picture });\r\n    setLoading(false);\r\n\r\n    if (!newProduct) {\r\n      setError(t(\"error.base\"));\r\n      return;\r\n    }\r\n    setProducts([...products, newProduct]);\r\n    updateCart();\r\n    setAddOpened(false);\r\n  }\r\n\r\n  return (\r\n    <div className=\"add__form\">\r\n      {loading && <Loader />}\r\n\r\n      <div className=\"form-field form__name\">\r\n        <span className=\"form-field__title\">{t(\"product.name\")}</span>\r\n        <input ref={nameInput} className=\"form-field__input\" />\r\n      </div>\r\n\r\n      <div className=\"form-field form__price\">\r\n        <span className=\"form-field__title\">{t(\"product.price\")}</span>\r\n        <input ref={priceInput} className=\"form-field__input\" />\r\n      </div>\r\n\r\n      <StatusCheckbox available={available} setAvailable={setAvailable} />\r\n\r\n      <div className=\"form__buttons\">\r\n        <button className=\"form__btn form__btn_solid\" onClick={addProduct}>\r\n          {t(\"add\")}\r\n        </button>\r\n        <button className=\"form__btn form__btn_transparent\" onClick={() => setAddOpened(false)}>\r\n          {t(\"cancel\")}\r\n        </button>\r\n      </div>\r\n\r\n      <div className=\"form__image\">\r\n        <ImageInput setImage={setImage} />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"./Auth.css\";\r\nimport { login } from \"../../../middleware\";\r\nimport {config } from \"../../../config\";\r\nimport { Loader } from \"../..\";\r\n\r\ninterface AuthProps {\r\n  setToken: (token: string) => void;\r\n  setError: (message: string) => void;\r\n}\r\n\r\nexport function Auth({ setToken, setError }: AuthProps) {\r\n  const loginInput: React.MutableRefObject<null | HTMLInputElement> = useRef(null);\r\n  const passwordInput: React.MutableRefObject<null | HTMLInputElement> = useRef(null);\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const { t } = useTranslation();\r\n\r\n  async function onAuth(): Promise<void> {\r\n    setLoading(true);\r\n    const username = loginInput!.current!.value;\r\n    const password = passwordInput!.current!.value;\r\n    if (!login) return;\r\n\r\n    const token = await login(username, password);\r\n\r\n    setLoading(false);\r\n    if (!token) {\r\n      setError(\"Wrong login or password\");\r\n      return;\r\n    }\r\n    document.cookie = `token=${token}; max-age=${config.login_time * 60}`;\r\n    setToken(token);\r\n  }\r\n\r\n  return (\r\n    <div className=\"auth\">\r\n      {loading  && <Loader />}\r\n      <input\r\n        ref={loginInput}\r\n        id=\"login\"\r\n        className=\"auth__input\"\r\n        placeholder={t(\"auth.login\")}\r\n        autoFocus={true}\r\n      />\r\n      <input\r\n        ref={passwordInput}\r\n        id=\"password\"\r\n        type=\"password\"\r\n        className=\"auth__input\"\r\n        placeholder={t(\"auth.password\")}\r\n      />\r\n\r\n      <div className=\"auth__buttons\">\r\n        <button className=\"auth__button auth__button_solid\" onClick={onAuth}>\r\n          {t(\"auth.log_in\")}\r\n        </button>\r\n        <button className=\"auth__button auth__button_transparent\" onClick={() => history.push(\"/\")}>\r\n          {t(\"cancel\")}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport \"./Admin.css\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport { Search } from \"../Search/Search\";\r\nimport { AdminProduct } from \"./Product/AdminProduct\";\r\nimport { AddForm } from \"./AddForm/AddForm\";\r\nimport { Auth } from \"./Auth/Auth\";\r\nimport { ProductWithId } from \"../../data/shared\";\r\n\r\ninterface AdminProps {\r\n  token: string;\r\n  setToken: (token: string) => void;\r\n  products: ProductWithId[];\r\n  setProducts: (list: ProductWithId[]) => void;\r\n  setError: (message: string) => void;\r\n  updateCart: () => void;\r\n}\r\n\r\nexport function Admin({ token, setToken, products, setProducts, setError, updateCart }: AdminProps) {\r\n  let [addOpened, setAddOpened] = useState(false);\r\n  const [search, setSearch] = useState(\"\");\r\n  const { t } = useTranslation();\r\n\r\n  function onSearchInput(value: string): void {\r\n    const croppedValue = value.trim().toLowerCase();\r\n    setSearch(croppedValue);\r\n  }\r\n\r\n  if (!token) {\r\n    return <Auth setToken={setToken} setError={setError} />;\r\n  }\r\n\r\n  return (\r\n    <div className=\"admin\">\r\n      <div className={`admin__header ${addOpened ? \"admin__header_blocked\" : \"\"}`}>\r\n        <button className=\"admin__header-add\" onClick={() => setAddOpened(true)}>\r\n          {t(\"add_product\")}\r\n        </button>\r\n        <Search inputEmitter={onSearchInput} />\r\n      </div>\r\n\r\n      <div className={`admin__add ${addOpened && \"admin__add_open\"}`}>\r\n        <AddForm\r\n          setAddOpened={setAddOpened}\r\n          products={products}\r\n          setProducts={setProducts}\r\n          setError={setError}\r\n          updateCart={updateCart}\r\n        />\r\n      </div>\r\n\r\n      <ul className={`admin__list ${addOpened ? \"admin__list_blocked\" : \"\"}`}>\r\n        {products\r\n          .filter(\r\n            item =>\r\n              item.item_name.toLowerCase().includes(search) || item.id.toString().includes(search),\r\n          )\r\n          .map((item, i) => (\r\n            <li className=\"admin__product\" key={i}>\r\n              <AdminProduct\r\n                id={item.id}\r\n                price={item.price}\r\n                is_available={item.is_available}\r\n                item_name={item.item_name}\r\n                picture={item.picture}\r\n                products={products}\r\n                setProducts={setProducts}\r\n                idx={i}\r\n                setError={setError}\r\n                updateCart={updateCart}\r\n              />\r\n            </li>\r\n          ))}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faMinusSquare, faPlusSquare } from \"@fortawesome/free-regular-svg-icons\";\r\nimport { ProductWithId } from \"../../../data/shared\";\r\nimport \"./CartProduct.css\";\r\n\r\ninterface CartProductProps extends ProductWithId {\r\n  amount: number;\r\n  changeCart: (id: number, add: boolean) => void;\r\n}\r\n\r\nexport function CartProduct({\r\n  item_name,\r\n  price,\r\n  id,\r\n  picture,\r\n  amount,\r\n  changeCart,\r\n}: CartProductProps) {\r\n  return (\r\n    <div className=\"cart-product\">\r\n      <img className=\"cart-product__img\" alt=\"\" src={picture} />\r\n      <div className=\"cart-product__name\">{item_name}</div>\r\n      <div className=\"cart-product__price\">{price} ₽</div>\r\n      <div className=\"cart-product__control\">\r\n        <button\r\n          className=\"cart-product__btn cart-product__btn_red\"\r\n          onClick={() => changeCart(id, false)}\r\n        >\r\n          <FontAwesomeIcon icon={faMinusSquare} />\r\n        </button>\r\n        <div className=\"cart-product__amount\">{amount}</div>\r\n        <button\r\n          className=\"cart-product__btn cart-product__btn_green\"\r\n          onClick={() => changeCart(id, true)}\r\n        >\r\n          <FontAwesomeIcon icon={faPlusSquare} />\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useTranslation } from \"react-i18next\";\r\nimport \"./Cart.css\";\r\nimport { CartType, ProductWithId } from \"../../data/shared\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { CartProduct } from \"./Product/CartProduct\";\r\nimport { config } from \"../../config\";\r\n\r\ninterface CartProps {\r\n  cartList: CartType;\r\n  products: ProductWithId[];\r\n  setCartList: React.Dispatch<React.SetStateAction<CartType>>;\r\n  cartCount: number;\r\n  setCartCount: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\n\r\nexport function Cart({ cartList, products, setCartList, cartCount, setCartCount }: CartProps) {\r\n  function changeCart(id: number, add: boolean): void {\r\n    if (add) {\r\n      cartList[id] += 1;\r\n    } else if (cartList[id] === 1) {\r\n      delete cartList[id];\r\n    } else {\r\n      cartList[id] -= 1;\r\n    }\r\n    document.cookie = `cart=${JSON.stringify(cartList)}; max-age=${config.login_time * 60 * 60}`;\r\n    setCartList(cartList);\r\n    setCartCount(add ? ++cartCount : --cartCount);\r\n  }\r\n\r\n  const cartProducts = products.filter(item => Object.keys(cartList).includes(item.id.toString()));\r\n\r\n  const { t } = useTranslation();\r\n\r\n  return (\r\n    <div className=\"cart\">\r\n      <p className=\"cart__title\">\r\n        <FontAwesomeIcon icon={faShoppingCart} />\r\n        &nbsp;&nbsp;{t(\"cart\")}\r\n      </p>\r\n\r\n      <ul className=\"cart__list\">\r\n        {cartProducts.map((item, i) => (\r\n          <li className=\"cart__item\" key={i}>\r\n            <CartProduct\r\n              id={item.id}\r\n              item_name={item.item_name}\r\n              picture={item.picture}\r\n              amount={cartList[item.id]}\r\n              price={item.price}\r\n              is_available={item.is_available}\r\n              changeCart={changeCart}\r\n            />\r\n          </li>\r\n        ))}\r\n      </ul>\r\n\r\n      <p className=\"cart__sum\">\r\n        <span className=\"cart__sum_light\">{t(\"sum\")}: </span>\r\n        {cartProducts.reduce((prev, curr) => {\r\n          const currProduct = products.find(item => item.id === curr.id);\r\n          if (!currProduct) return prev;\r\n          return prev + currProduct.price * cartList[curr.id];\r\n        }, 0)}{\" \"}\r\n        ₽\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React, { ChangeEvent } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport {  useTranslation } from \"react-i18next\";\r\nimport \"./Header.css\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faShoppingCart } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { config } from \"../../config\";\r\n\r\ninterface HeaderProps {\r\n  authToken: string;\r\n  setToken: React.Dispatch<React.SetStateAction<string>>;\r\n  cartCount: number;\r\n}\r\n\r\nexport function Header({ authToken, setToken, cartCount }: HeaderProps) {\r\n  const history = useHistory();\r\n  const { i18n, t } = useTranslation();\r\n  const { languages } = config;\r\n\r\n  function logout() {\r\n    document.cookie = \"token=; max-age=-1\";\r\n    setToken(\"\");\r\n  }\r\n\r\n  async function changeLang(e: ChangeEvent): Promise<void> {\r\n    //@ts-ignore\r\n    const lang = e.nativeEvent.target.value;\r\n    await i18n.changeLanguage(lang);\r\n    document.cookie = `i18n=${lang};`;\r\n  }\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <button className=\"header__name\" onClick={() => history.push(\"/\")}>\r\n        {config.name}\r\n      </button>\r\n\r\n      <button className={`header__btn ${!authToken && \"header__btn_hidden\"}`} onClick={logout}>\r\n        {t(\"auth.log_out\")}\r\n      </button>\r\n      <button className=\"header__btn\" onClick={() => history.push(\"/admin\")}>\r\n        {t(\"auth.admin\")}\r\n      </button>\r\n\r\n      <button className=\"header__cart\" onClick={() => history.push(\"/cart\")}>\r\n        {cartCount || \"\"}&nbsp;&nbsp;\r\n        <FontAwesomeIcon icon={faShoppingCart} />\r\n      </button>\r\n\r\n      <select className=\"header__lang\" onChange={changeLang} defaultValue={i18n.language}>\r\n        {languages.map((lang) => (\r\n          <option\r\n            value={lang.key}\r\n            key={lang.key}\r\n          >\r\n            {lang.name}\r\n          </option>\r\n          ))}\r\n      </select>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport \"./Loader.css\";\r\n\r\nexport function Loader() {\r\n  return (\r\n    <div className=\"loader\">\r\n      <div className=\"loader__container\">\r\n        <svg viewBox=\"0 0 36 36\" className=\"loader__bar\">\r\n          <circle\r\n            className=\"loader__segment\"\r\n            cx=\"18\"\r\n            cy=\"18\"\r\n            r=\"15.91549430918954\"\r\n            strokeWidth=\"4\"\r\n            fill='transparent'\r\n            strokeDasharray=\"80 20\" />\r\n        </svg>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React from \"react\";\r\nimport \"./Error.css\";\r\n\r\ninterface ErrorProps {\r\n  message: string;\r\n  show: boolean;\r\n  setError: (arg: string) => void;\r\n}\r\n\r\nexport function Error({ message, show, setError }: ErrorProps) {\r\n  return (\r\n    <div className={`error ${show && \"error_show\"}`}>\r\n      <div className=\"error__container\">\r\n        <div className=\"error__message\">{ message }</div>\r\n        <button className=\"error__button\" onClick={() => setError(\"\")}>OK</button>\r\n      </div>\r\n    </div>\r\n  )\r\n}","import React, { useEffect, useState } from \"react\";\r\nimport \"./App.css\";\r\nimport { Admin, MainPage, Cart, Header, Loader } from \"./components\";\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport { CartType, ProductWithId } from \"./data/shared\";\r\nimport { loadProducts } from \"./middleware\";\r\nimport { Error } from \"./components/Error/Error\";\r\n\r\nfunction App() {\r\n  const [authToken, setToken] = useState(getToken());\r\n\r\n  const [products, setProducts] = useState([] as ProductWithId[]);\r\n  const [loaded, setLoaded] = useState(false);\r\n\r\n  const [cartList, setCartList] = useState({});\r\n  const [cartCount, setCartCount] = useState(0);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    if (loaded) return;\r\n    loadProducts().then((data) => {\r\n      setProducts(data);\r\n      updateCart();\r\n      setLoaded(true);\r\n    });\r\n  });\r\n\r\n  function updateCart() {\r\n    const { count, cartData } = getCart();\r\n    setCartList(cartData);\r\n    setCartCount(count);\r\n  }\r\n\r\n  function getToken() {\r\n    const tokenExpr = document.cookie.match(/token=[a-zA-Z0-9]+;?/);\r\n    if (!tokenExpr) return \"\";\r\n    return tokenExpr[0].slice(6);\r\n  }\r\n\r\n  function getCart(): {\r\n    count: number;\r\n    cartData: CartType;\r\n  } {\r\n    const data = document.cookie.match(/cart=[{\"0-9:, ]*}/);\r\n    if (!data)\r\n      return {\r\n        count: 0,\r\n        cartData: {},\r\n      };\r\n\r\n    let parsedData = JSON.parse(data[0].slice(5)) as CartType;\r\n    parsedData = Object.entries(parsedData)\r\n      .filter(([id, _]) => {\r\n        const item = products?.find((item) => item.id.toString() === id);\r\n        return item && item.is_available;\r\n      })\r\n      .reduce((prev, [id, count]) => ({\r\n        ...prev,\r\n        [id]: count,\r\n      }), {} as CartType)\r\n\r\n    return {\r\n      count: Object.values(parsedData).reduce((prev, curr) => prev + curr, 0),\r\n      cartData: parsedData,\r\n    };\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      {!loaded && <Loader />}\r\n\r\n      <Header authToken={authToken} setToken={setToken} cartCount={cartCount} />\r\n\r\n      <Error message={error} show={!!error} setError={setError} />\r\n\r\n      <div className=\"content\">\r\n        <Switch>\r\n          <Route\r\n            exact\r\n            path=\"/\"\r\n            render={() => (\r\n              <MainPage\r\n                cart={cartList}\r\n                setCart={setCartList}\r\n                cartCount={cartCount}\r\n                setCartCount={setCartCount}\r\n                products={products}\r\n                setProducts={setProducts}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/admin\"\r\n            render={() => (\r\n              <Admin\r\n                token={authToken}\r\n                setToken={setToken}\r\n                products={products}\r\n                setProducts={setProducts}\r\n                setError={setError}\r\n                updateCart={updateCart}\r\n              />\r\n            )}\r\n          />\r\n          <Route\r\n            exact\r\n            path=\"/cart\"\r\n            render={() => (\r\n              <Cart\r\n                cartList={cartList}\r\n                products={products}\r\n                setCartList={setCartList}\r\n                cartCount={cartCount}\r\n                setCartCount={setCartCount}\r\n              />\r\n            )}\r\n          />\r\n        </Switch>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import i18n from \"i18next\";\r\nimport { initReactI18next } from \"react-i18next\";\r\nimport ru from \"./locales/ru.json\";\r\nimport en from \"./locales/en.json\";\r\n\r\nconst resources = {\r\n  en: {\r\n    translation: en,\r\n  },\r\n  ru: {\r\n    translation: ru,\r\n  },\r\n};\r\n\r\ntype Language = \"en\" | \"ru\";\r\n\r\nfunction getCurrentLanguage(): Language {\r\n  const cookieLang = document.cookie.match(/i18n=(en|ru);?/);\r\n  if (!cookieLang) {\r\n    const navLang = navigator.language.split(/[-_]/)[0];\r\n    return navLang === \"ru\" || navLang === \"en\" ? navLang : \"en\";\r\n  }\r\n  return cookieLang[1] as Language;\r\n}\r\n\r\ni18n.use(initReactI18next).init({\r\n  resources,\r\n  lng: getCurrentLanguage(),\r\n  keySeparator: \".\",\r\n});\r\n\r\nexport default i18n;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport { HashRouter } from \"react-router-dom\";\r\nimport \"./i18n\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <HashRouter>\r\n      <App />\r\n    </HashRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}